Requête qui récupère le marché dont l'id est iddemande :
String query = "select m.libelle, av.prix, av.quantite from achatvente av join marche m on m.idmarche = av.idmarche where m.idmarche = 2;";
	    
Requête qui récupère l'identité de chaque vendeur sur le marche dont l'id est iddemande :
String query = "select u.iduser, u.login, t.idtitre, av.prix, av.quantite from utilisateur u, titre t, transactions tr, achatvente av where t.iduser = u.iduser and tr.idtitre = t.idtitre and av.idachatvente = tr.idachatvente and av.idmarche = iddemande;";

Requête pour le marché inverse
select u.iduser, u.login, m.idmarche, m.libelle, av.prix, av.quantite from utilisateur u, titre t, transactions tr, achatvente av, marche m where t.iduser = u.iduser and tr.idtitre = t.idtitre and av.idachatvente = tr.idachatvente and av.idmarche = m.idmarche and av.idmarche = 1 and av.prix <= 70 order by av.prix asc;

Requête pour récupérer les offres dans ajouterOffreInverse :
select av.idachatvente, u.iduser, u.login, m.idmarche, m.libelle, av.prix, av.quantite from utilisateur u, titre t, transactions tr, achatvente av, marche m where t.iduser = u.iduser and tr.idtitre = t.idtitre and av.idachatvente = tr.idachatvente and av.idmarche = m.idmarche and av.idmarche = ? and ? <= 100 - av.prix order by av.prix desc;

Permet de récupérer les titres vendus, avec l'utilisateur correspondant et son cash :
select ti.idtitre, ti.iduser, u.login, u.cash from titre ti, utilisateur u where ti.iduser = u.iduser and ti.description = 'vendu';

A Appeller lors de la fermeture d'un marché, liste chaque joueur avec son nombre de bons à créditer en multipliant par 100 :
select u.iduser, u.login, m.idmarche, sum(av.quantite) as quantite from utilisateur u, titre t, transactions tr, achatvente av, marche m where t.iduser = u.iduser and tr.idtitre = t.idtitre and av.idachatvente = tr.idachatvente and av.idmarche = m.idmarche and av.idmarche = 1 and (t.description = 'achat' or t.description = 'vendu') group by u.iduser, u.login, m.idmarche;

Liste les titres d'un utilisateurs, qu'ils soient en cours, vendus, perdus, gagnés, rendus, en offre d'achat ou de vente :
select u.iduser, u.login, t.idtitre, t.description, m.idmarche, m.libelle, sum(av.quantite) as quantite from utilisateur u, titre t, transactions tr, achatvente av, marche m where t.iduser = u.iduser and tr.idtitre = t.idtitre and av.idachatvente = tr.idachatvente and av.idmarche = m.idmarche and u.iduser = 1 group by u.iduser, u.login, t.idtitre, t.description, m.idmarche, m.libelle order by t.description;
